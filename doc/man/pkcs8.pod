=pod

=head1 NAME

pkcs8 - PKCS#8 format private key processing tool

=head1 SYNOPSIS

B<openssl> B<pkcs8>
[B<-topk8>]
[B<-inform PEM|DER>]
[B<-outform PEM|DER>]
[B<-in filename>]
[B<-out filename>]
[B<-noiter>]
[B<-nocrypt>]
[B<-nooct>]
[B<-v2 alg>]

=head1 DESCRIPTION

The B<pkcs8> command processes private keys in PKCS#8 format. It can handle
both unencrypted PKCS#8 PrivateKeyInfo format and EncryptedPrivateKeyInfo
format with a variety of PKCS#5 (v1.5 and v2.0) and PKCS#12 algorithms.

=head1 COMMAND OPTIONS

=over 4

=item B<-topk8>

Normally a PKCS#8 private key is expected on input and a "traditional" format
private key will be written. With the B<-topk8> option the situation is
reversed: it reads a traditional format private key and writes a PKCS#8
format key.

=item B<-inform DER|PEM>

This specifies the input format. If a PKCS#8 format key is expected on input
then either a B<DER> or B<PEM> encoded version of a PKCS#8 key will be
expected. Otherwise the B<DER> or B<PEM> format of the "traditional" format
private key is used.

=item B<-outform DER|NET|PEM>

This specifies the output format, the options have the same meaning as the 
B<-inform> option.

=item B<-in filename>

This specifies the input filename to read a key from or standard input if this
option is not specified. If the key is encrypted a pass phrase will be
prompted for.

=item B<-out filename>

This specifies the output filename to write a key to or standard output by
is not specified. If any encryption options are set then a pass phrase will be
prompted for. The output filename should B<not> be the same as the input
filename.

=item B<-des|-des3|-idea>

These options encrypt the private key with the DES, triple DES, or the 
IDEA ciphers respectively before outputting it. A pass phrase is prompted for.
If none of these options is specified the key is written in plain text. This
means that using the B<rsa> utility to read in an encrypted key with no
encryption option can be used to remove the pass phrase from a key, or by
setting the encryption options it can be use to add or change the pass phrase.
These options can only be used with PEM format output files.

=item B<-text>

prints out the various public or private key components in
plain text in addition to the encoded version. 

=item B<-noout>

this option prevents output of the encoded version of the key.

=item B<-modulus>

this option prints out the value of the modulus of the key.

=item B<-check>

this option checks the consistency of an RSA private key.

=item B<-pubin>

by default a private key is input file with this option a public key is input
instead.

=item B<-pubout>

by default a private key is output with this option a public
key will be output instead. This option is automatically set if the input is
a public key.

=back

=head1 EXAMPLES

To remove the pass phrase on an RSA private key:

C<openssl rsa -in key.pem -out keyout.pem>

To encrypt a private key using triple DES:

C<openssl rsa -in key.pem -des3 -out keyout.pem>

To convert a private key from PEM to DER format: 

C<openssl rsa -in key.pem -outform DER -out keyout.der>

To print out the components of a private key to standard output:

C<openssl rsa -in key.pem -text -noout>

To just output the public part of a private key:

C<openssl rsa -in key.pem -pubout -out pubkey.pem>

=head1 BUGS

It should be possible to read or produce PKCS#8 format encrypted RSA keys:
at present it isn't.

=head1 SEE ALSO

L<pkcs8>, dsa(1), genrsa(1), gendsa(1)

=cut
